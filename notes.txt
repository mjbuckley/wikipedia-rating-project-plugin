THEME

-I display a list of taxonomy terms on taxonomy pages using wp_list_categories.  There is no good way to paginate this.  This isn't a problem for the rating and discipline taxonomies, since they won't get too large, but the title taxonomy has the potential to get quite large.  Keep things this way for now, but this is a potential issue in the future that might need a solution.  One thing to look at is get_categories, which return an array of terms and might be useful.


PLUGIN

-I disable revisions for the review post type.  They were causing all sorts of problems.  While I have a general understanding of how to go about fixing them, it would take a lot of work and make the code more complicated for something I'm not sure we even want to use.  Some key issues:
  *Custom metadata doesn't get tied to revisions.  So, if I changed the lastrevid at some point, then reverted to an older revision, the lastrevid would remain the new lastrevid, not the one that existed in the past.
  *Revisions were causing certain basic functions (like get post meta) not to work properly in the save_post hook.  I think this might be because a revision save is triggered immediately after a "regular" save, and this revision has its own id, which doesn't have the meta data associated with it, which was then triggering an error message (possibly there wasn't even an error on the post save, but only on the revision save, but they happen at the same time so I can't tell).  I could bypass certain save_post checks of the post_status is a revision, but that leads to it's own set of problems.
  *Revisions were getting a different post_name than the post they were associated with.
  *Not clear how to deal with the wiki check function and revisions.



MAGIC QUOTES

In the past php had an option to automatically escape certain characters with a backslash in certain cases (such as $_POST objects).  This was function was called magic quotes.  This feature could be turned on or off.  To deal with the uncertainty of whether the feature was turned on, wordpress decided to replicate the feature no matter whether it was turned on or off.  Now the function has been removed from php, but wordpress continues to add magic quotes.  The rational is for backwards compatibility, since many plugins are expecting the characters to be escaped.  Additionally, it seems like some core functions assume this as well (I'm less certain here).  They can be removed if needed, but most important thing is to know that they are added and where they are coming from.


The wordpress function add_magic_quotes uses the php function addslashes.
The wordpress function stripslashes_deep uses the php function stripslashes.

ALSO SEE wp_slash() and wp_unslash




ADMIN CLEANUP: I originally had many functions cleaning up the appearance of the admin menu located in the plugin, but I made some changes.  Many of the cleanup functions were purley appearance based, so I moved them to the theme's functions.php file.  A few straddle the line, and I kept them grouped together and still in the plugin.  Finally, I removed some because they didn't affect the wrp_reviewer role, and I don't want to alter things for other roles.  They are below for reference in case I change my mind or find out I'm wrong about what they affected.

// function wrp_remove_admin_bar_comments( $wp_admin_bar ) {
//   $wp_admin_bar->remove_node( 'comments' );
// }
// add_action( 'admin_bar_menu', 'wrp_remove_admin_bar_comments', 999 );
// // Remove tools menu from admin screen for all but admins.
//
// function wrp_remove_tools_menu() {
//   $user = wp_get_current_user();
//   if ( ! $user->has_cap( 'manage_options' ) ) {
//     remove_menu_page( 'tools.php' );
//   }
// }
// add_action( 'admin_menu', 'wrp_remove_tools_menu' );
//
// // Remove comments menu from admin screen for all but admins.
// function wrp_remove_comments_menu() {
//   $user = wp_get_current_user();
//   if ( ! $user->has_cap( 'manage_options' ) ) {
//     remove_menu_page( 'edit-comments.php' );
//   }
// }
// add_action( 'admin_menu', 'wrp_remove_comments_menu' );

ADMIN CLEANUP TO DO: I solved the problem of the incorrect post number count in a wrp_reviewer's admin screen by changing the css to not show those numbers.  I better fix would be to alter how those numbers are calculated.  This might be done with the views_edit-post filter and unset($views['mine']


CHANGING POST UPDATED MESSAGE: I tried the below code.  Two weird things.  First, when checking the logs $post_type is being set at "post" for both posts and wrp_review.  In the db things are correct though.  Not sure if it's an issue with the function I'm using, or how I'm checking the id, but something is off.  Also, even though $post_type != wrp_review, the if statement still gets evaluated and the message removed.  Not sure about this.  Should I be using something different to compare strings (like string compare)?

register_activation_hook( __FILE__, 'wrp_add_review_caps' );
// add_action( 'admin_init', 'wrp_add_review_caps', 999 );

add_filter( 'post_updated_messages', 'wrp_post_published' );
function wrp_post_published( $messages ) {
  $post_id = get_the_ID();
  $post_type = get_post_type( $post_id );
  if ( $post_type === 'wrp_review' ) {
    unset($messages['post'][6]);
    return $messages;
  }
  error_log(print_r($post_type, TRUE));
}


MAGIC QUOTES GIST

From what I have seen, WP expects magic quotes (slashed data) everywhere that isn't the database or in the html (or functions that output to html).  Everywhere else magic quotes are expected.  Obviously double check before assuming this for anything critical, but this looks mostly correct.


CHANGE SAVE TO WP_UPDATE_POST NOTES

-Need to check for revisions at some point.
-Figure out issue with disappearing post_title (see chris-froome-2)
-Change order of sanitize/remove slashes?

- POST_NAME GENERATION NOTES:
As it stands now, I beleive it is expected behavior that changing wiki_title or wiki_lastrevid could change to post_name.  Whether or not this happens will depend on whether there have been any reviews of the the same wiki_title after the page being edited.  Additionally, changing post_status from publish backwards and then publishing again could change the post_name.

TO DO

-CURIOUS ABOUT what happens to post_name if there is an update to wiki_title or wiki_lastrevid.  Don't really care if it changes or stays the same (both have their pros/cons), but I want to make sure it doesn't do anything weird.  RELATED: not sure if sending $to_save_title for post_name makes sense or of '' would be better.

- Author archive page shows regular posts as well.  This could be a problem if a site had a blog as well.  Figure out best way to deal with it.
- Replace get_the_title() in custom message function with use of wiki_title term
- I need to check if post is a revision and if so exit the save_post hook.  Although I have revisions turned off, if they were turned on I think there is a potential for an infinite loop, plus I don't want to rerun checks on things that have already been checked.  Also, better understand revision process in general.
- Find other notes in other places in add them, plus organize everything better.
- Do I need to add nonce to disciplines form?
- Set wrp plugin as a must use plugin for the theme.
- Be consistent with the add action/filters.  Either all before or after function, not a mix.
- Go through plugin developers guide and make sure I'm not missing anything.
- Make sure I'm following WordPress php standards.
- Complete comment/gpl section: be sure to include site/author urls.
- I think (not sure) there are two issues with inserting rating terms in init hook.  Not huge issue, but deal with eventually:
  * Admins can never delete them if they want to, because they are always added back in.
  * wp_insert term runs every time, even though it really only need to be done once.
- Deal with uninstalls/deactivation.
- Consider changing switch statement to an array in the custom admin notice function.
- Messages have been updated and generally make sense and work.  However, they are still potentially confusing/missing stuff depending on how I handle the default WP messages that also show up.  Once I figure out what I'm doing with the WP messages then update these accordingly.
- Should I set post_name and/or post_title to '' when rolling back to draft status?
- I got the default "post update" message removed.  Should I add a view link to my messages?  Also, it would be nice to have a reference to what has heppend (published, sent for review, etc).  ALSO, I FIGURED IT OUT, BUT HAVEN'T ADDED IN ALL NEEDED LOCATIONS.
- clean up admin messages.  I can have messages with the same text share the same case statement.  Also, I reused on erro message in many places.  Go back and give each location its own error number.
- Change the my_messages query arg to something less generic.
- change $loc to $location?
- I bookmarked a two pages that show how to compress my use of array keys into one nice line. Look at that and apply where needed.
- I think I can probably use the_title_attribute instead of my long way of getting the title.  Look over this an decide.
- I mostly have custom messages looking good, but a re-save were only content/disciplines (not title/lastrevid) has changed will bring up the generic post update/submitted/etc messages.  Fix this.  Also, consider making message dismissable.
- Make sure that files aren't running unnecessarily.  Some things I have might be being checked on every page.
- The way things are setup, all reviews will have a unique post_name.  However, it cannot be assumed to an earlier post_name # means an older review.  If a post_name number is no longer in use, that number gets freed up to be used again.  Ex: There are 10 Albert Einstein reviews.  Reviewer for Albert-Einstein-5 decides to delete their review.  Now, a new person creates a review. That review will be assigned Albert-Einstein-5.  If a review ever gets reverted to a draft, the same thing happens.  Reverting to draft removes the post_name, thus freeing it up the old post_name.  The problem is one of unique permalinks.  If postname is being relied upon for a permalink, this could in rare cases lead to confusion.  Using something like %post_name%post_id% is a potential solution.  ex: http://www.medievalwikipedia.org/Albert-Einstein-3/467.  I'm fairly certain that post_ids don't get reused, and even if they do the chance that both a post_name and post_id would ever get reassigned to the same post has to be pretty remote.
-PUT IN NOTES: A unique url based the reviewed wikipedia page title is created when a review is published.  Reverting a review to draft/pending and later republishing or changing the wiki_title or wiki_lastrevid may result in a url change.
-PUT IN NOTES: Every review has a unique post_name, but is not 100% fixed (for that use GUID or post_id).
-Not exactly wrong, but worth noting: If a title has been successfully published and then the user tries to change title or lastrevid to something else (that is wrong), the review gets reverted to a draft, but the old but correct title/lastrevid fields remain saved and are returned in the form.
-Figure out about removing roles.
-Add plugin and db version numbers.  This will be very helpful for updates.  There is a really good description of this at: http://solislab.com/blog/plugin-activation-checklist/
-Deactivation generally works as expected.  For reviewer role, they can still log in, but they can't add anything of any type.  However, there dashboard looks different (because I removed stuff based on reviewer role, which no longer exists).  The curiosity is that if I request something like wrp/reviews/Tom-Hanks or even just wrp/reviews/ksdjfhjds returns the home page, but wrp/kljdsfdskj gives a this doesn't exist page.??
-Reactivating was causing me lots of problems.  Lots of links were broken and pages incomplete even though I was adding the custom post type and then flushing rewrite rules according to codex specs.  A brief mention in a blog post said to also register custom taxonomies in the activation hook, and once I did that everything worked perfectly, but keep in mind in the future because its hard to figure out.
-When I activate a plugin after deactivating it, the users with the reviewer role get their reviewer role back.  This is nice, but not sure why its happening.  I remove the role on deactivation, but I guess I don't remove that name in the db next to the user?  Probably that.  Decide if this is ok.  Should probably have a full removal in an uninstall option at some point.
-Author page only lists up to 10 reviews.  Same with many other pages.
-Need to use defined( 'ABSPATH' ) OR exit; ???

PRIORITY

- Make sure save_post hook and use of wp_update_post (esp with post_name and title generation) is solid.






- The gist of wp_insert_post: takes info given it, merges it into the info that currently exists, then sends it on to wp_insert_post.  It expects slashed data (unless sent an object) and it sends slashed data on to wp_insert_posts.  There are a few minor checks that get done, but not much.
- wp_insert_post gets this info.  It has a set of defaults that get merged into the sent info in case anything is missing (but there shouldn't be),