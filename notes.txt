THEME

-I display a list of taxonomy terms on taxonomy pages using wp_list_categories.  There is no good way to paginate this.  This isn't a problem for the rating and discipline taxonomies, since they won't get too large, but the title taxonomy has the potential to get quite large.  Keep things this way for now, but this is a potential issue in the future that might need a solution.  One thing to look at is get_categories, which return an array of terms and might be useful.


PLUGIN

-I disable revisions for the review post type.  They were causing all sorts of problems.  While I have a general understanding of how to go about fixing them, it would take a lot of work and make the code more complicated for something I'm not sure we even want to use.  Some key issues:
  *Custom metadata doesn't get tied to revisions.  So, if I changed the lastrevid at some point, then reverted to an older revision, the lastrevid would remain the new lastrevid, not the one that existed in the past.
  *Revisions were causing certain basic functions (like get post meta) not to work properly in the save_post hook.  I think this might be because a revision save is triggered immediately after a "regular" save, and this revision has its own id, which doesn't have the meta data associated with it, which was then triggering an error message (possibly there wasn't even an error on the post save, but only on the revision save, but they happen at the same time so I can't tell).  I could bypass certain save_post checks of the post_status is a revision, but that leads to it's own set of problems.
  *Revisions were getting a different post_name than the post they were associated with.
  *Not clear how to deal with the wiki check function and revisions.



MAGIC QUOTES

In the past php had an option to automatically escape certain characters with a backslash in certain cases (such as $_POST objects).  This was function was called magic quotes.  This feature could be turned on or off.  To deal with the uncertainty of whether the feature was turned on, wordpress decided to replicate the feature no matter whether it was turned on or off.  Now the function has been removed from php, but wordpress continues to add magic quotes.  The rational is for backwards compatibility, since many plugins are expecting the characters to be escaped.  Additionally, it seems like some core functions assume this as well (I'm less certain here).  They can be removed if needed, but most important thing is to know that they are added and where they are coming from.


The wordpress function add_magic_quotes uses the php function addslashes.
The wordpress function stripslashes_deep uses the php function stripslashes.

ALSO SEE wp_slash() and wp_unslash




ADMIN CLEANUP: I originally had many functions cleaning up the appearance of the admin menu located in the plugin, but I made some changes.  Many of the cleanup functions were purley appearance based, so I moved them to the theme's functions.php file.  A few straddle the line, and I kept them grouped together and still in the plugin.  Finally, I removed some because they didn't affect the wrp_reviewer role, and I don't want to alter things for other roles.  They are below for reference in case I change my mind or find out I'm wrong about what they affected.

// function wrp_remove_admin_bar_comments( $wp_admin_bar ) {
//   $wp_admin_bar->remove_node( 'comments' );
// }
// add_action( 'admin_bar_menu', 'wrp_remove_admin_bar_comments', 999 );
// // Remove tools menu from admin screen for all but admins.
//
// function wrp_remove_tools_menu() {
//   $user = wp_get_current_user();
//   if ( ! $user->has_cap( 'manage_options' ) ) {
//     remove_menu_page( 'tools.php' );
//   }
// }
// add_action( 'admin_menu', 'wrp_remove_tools_menu' );
//
// // Remove comments menu from admin screen for all but admins.
// function wrp_remove_comments_menu() {
//   $user = wp_get_current_user();
//   if ( ! $user->has_cap( 'manage_options' ) ) {
//     remove_menu_page( 'edit-comments.php' );
//   }
// }
// add_action( 'admin_menu', 'wrp_remove_comments_menu' );

ADMIN CLEANUP TO DO: I solved the problem of the incorrect post number count in a wrp_reviewer's admin screen by changing the css to not show those numbers.  I better fix would be to alter how those numbers are calculated.  This might be done with the views_edit-post filter and unset($views['mine']


CHANGING POST UPDATED MESSAGE: I tried the below code.  Two weird things.  First, when checking the logs $post_type is being set at "post" for both posts and wrp_review.  In the db things are correct though.  Not sure if it's an issue with the function I'm using, or how I'm checking the id, but something is off.  Also, even though $post_type != wrp_review, the if statement still gets evaluated and the message removed.  Not sure about this.  Should I be using something different to compare strings (like string compare)?

register_activation_hook( __FILE__, 'wrp_add_review_caps' );
// add_action( 'admin_init', 'wrp_add_review_caps', 999 );

add_filter( 'post_updated_messages', 'wrp_post_published' );
function wrp_post_published( $messages ) {
  $post_id = get_the_ID();
  $post_type = get_post_type( $post_id );
  if ( $post_type === 'wrp_review' ) {
    unset($messages['post'][6]);
    return $messages;
  }
  error_log(print_r($post_type, TRUE));
}


MAGIC QUOTES GIST

From what I have seen, WP expects magic quotes (slashed data) everywhere that isn't the database or in the html (or functions that output to html).  Everywhere else magic quotes are expected.  Obviously double check before assuming this for anything critical, but this looks mostly correct.


CHANGE SAVE TO WP_UPDATE_POST NOTES

-Need to check for revisions at some point.
-Figure out issue with disappearing post_title (see chris-froome-2)
-Change order of sanitize/remove slashes?

- POST_NAME GENERATION NOTES:
As it stands now, I beleive it is expected behavior that changing wiki_title or wiki_lastrevid could change to post_name.  Whether or not this happens will depend on whether there have been any reviews of the the same wiki_title after the page being edited.  Additionally, changing post_status from publish backwards and then publishing again could change the post_name.


// useful for debugging when you cannont print to screen: error_log(print_r($tvariable_name, TRUE)).  Then run
// "tail php_error.log" from the MAMP folder in the terminal.